// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projeto.Data.Context;

namespace Projeto.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20191220001712_Projeto")]
    partial class Projeto
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Projeto.Data.Entity.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdCliente")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnName("CPF")
                        .HasMaxLength(25);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasMaxLength(150);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasMaxLength(150);

                    b.HasKey("IdCliente");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Projeto.Data.Entity.Filme", b =>
                {
                    b.Property<int>("IdFilme")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdFilme")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Genero")
                        .HasColumnName("Genero")
                        .HasMaxLength(150);

                    b.Property<string>("Sinopse")
                        .HasColumnName("Sinopse")
                        .HasMaxLength(250);

                    b.Property<string>("Titulo")
                        .HasColumnName("Titulo")
                        .HasMaxLength(100);

                    b.HasKey("IdFilme");

                    b.ToTable("Filme");
                });

            modelBuilder.Entity("Projeto.Data.Entity.Ingresso", b =>
                {
                    b.Property<int>("IdIngresso")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdIngresso")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataSessao")
                        .HasColumnName("DataSessao");

                    b.Property<int>("IdCliente")
                        .HasColumnName("IdCliente");

                    b.Property<int>("IdFilme")
                        .HasColumnName("IdFilme");

                    b.Property<decimal>("Preco")
                        .HasColumnName("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SalaCinema")
                        .IsRequired()
                        .HasColumnName("SalaCinema")
                        .HasMaxLength(150);

                    b.HasKey("IdIngresso");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdFilme");

                    b.ToTable("Ingresso");
                });

            modelBuilder.Entity("Projeto.Data.Entity.Ingresso", b =>
                {
                    b.HasOne("Projeto.Data.Entity.Cliente", "Cliente")
                        .WithMany("Ingresso")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Projeto.Data.Entity.Filme", "Filme")
                        .WithMany("Ingresso")
                        .HasForeignKey("IdFilme")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
